@syntax-text-color: @code-color;
@syntax-invisible-character-color: @syntax-indent-guide-color;
@syntax-gutter-text-color-selected: @syntax-gutter-text-color;
@syntax-gutter-background-color: @syntax-background-color;
@syntax-gutter-background-color-selected: @syntax-gutter-background-color;

.atom-text-editor, :host {
    background-color: @syntax-background-color;
    color: @code-color;
    .wrap-guide {
        background-color: @syntax-wrap-guide-color;
    }
    .indent-guide {
        color: @syntax-indent-guide-color;
    }
    .invisible-character {
        color: @syntax-invisible-character-color;
    }

    .gutter {
        background-color: @syntax-gutter-background-color;
        color: @syntax-gutter-text-color;
        .line-number {
            &.cursor-line {
                background-color: @syntax-gutter-background-color-selected;
                color: @syntax-gutter-text-color-selected;
            }
            &.cursor-line-no-selection {
                color: @syntax-gutter-text-color-selected;
            }
        }
    }
    .gutter .line-number.folded,
    .gutter .line-number:after,
    .fold-marker:after {
        color: @syntax-gutter-text-color;
    }

    .selection .region {
        background-color: @syntax-selection-color;
    }
}

.bracket-matcher .region {
    background-color: @bracket-matcher-color;
    opacity: 0.6;
    border-bottom: 0 none;
}

.source {
    .comment {
        color: @comment-color;
    }
    .keyword:not(.unit):not(.special-method) {
        color: @keyword-color;
    }
    .string {
        color: @string-color;
    }

    // Atom marks some keywords like `class`, `var` in some languages as weird things,
    // we should workaround them.
    .storage.type, .storage.modifier {
        color: @keyword-color;
    }

    // String interpolation in Ruby, CoffeeScript, and others
    .string {
        .source,
        .meta.embedded.line {
            color: @code-color;
        }
        .punctuation.section.embedded {
            color: @code-color;
            .source {
                color: @code-color; // Required for the end of embedded strings in Ruby #716
            }
        }
    }

    .constant {
        color: @code-color;
    }
    .tag {
        color: @code-color;
    }
    .entity.name.function.fus, .variable.parameter, .variable.assignment {
        font-style: italic;
    }
}

.xml, .html {
    &.tag {
        color: @keyword-color;
    }
    &.attribute-name {
        color: @keyword-color;
    }
    &.string {
        color: @code-color;
    }
    &.punctuation:not(.comment) {
        color: @keyword-color;
    }
    &.comment {
        color: @comment-color;
    }
    &.constant:not(.inline-data), &.constant:not(.inline-data) *:not(.invisible-character) {
        color: @string-color;
    }
    &.constant.inline-data, &.constant.inline-data *:not(.invisible-character) {
        color: @code-color;
    }
}
